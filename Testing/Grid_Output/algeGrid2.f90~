program algeGrid2
  implicit none

  !will generate the direchlet bcs for laplace smoothing
  integer  :: Imax,Jmax,i,j
  real, dimension(:,:), allocatable :: x,y


  print *, "Enter Imax (columns) (evenly divisible by 5)"
  read *, Imax
  print *, "Enter Jmax (rows)"
  read *, Jmax

  allocate(x(Jmax+1,Imax+1)) !(row,col)
  allocate(y(Jmax+1,Imax+1))
  
  y = 0.0
  x = 0.0
  
  do i=1,Imax+1
     do j=1,Jmax+1
        !bottom
        x(j,i) = 5*real(i-1)/real(Imax)

        if (i <= 2*Imax/5+1) then
           !first flat
           y(j,i) = real(j-1)/real(Jmax)
        else if ( i > 2*Imax/5+1 .and. i < 3*Imax/5+1) then
           !middle hump
           y(j,i) = (1-0.0*sin(3.1415928*(x(1,i)-x(1,2*Imax/5+1))))*(j-1)/Jmax&
                +0.0*sin(3.1415928*(x(1,i)-x(1,2*Imax/5+1)))
        else if ( i >= 3*Imax/5+1) then
           !last flat
           y(j,i) = real(j-1)/real(Jmax)
        end if

        !top
        !x(Jmax+1,i) = 5*(real(i)-1.0)/real(Imax)
        !y(Jmax+1,i) = 1.0

     !do j=1,Jmax+1
     !   !left
     !   x(j,1) = 0.0
     !   y(j,1) = (real(j)-1.0)/real(Jmax)
     !
     !   !right
     !   x(j,Imax+1) = 5.0
     !   y(j,Imax+1) = (real(j)-1.0)/real(Jmax)
     end do
  end do

  open(unit=1,file="XFINAL.dat",form="unformatted",status="replace",action="write")
  open(unit=2,file="YFINAL.dat",form="unformatted",status="replace",action="write")
  
  do j=1,Jmax+1
     do i=1,Imax+1
        write(1) x(j,i)
        write(2) y(j,i)
     end do
  end do

  print *, "X matrix"
  print "(21F7.3)", x
  print *, "Y matrix"
  print "(21F7.3)", y
  
  close(1)
  close(2)
  
  
  deallocate(x)
  deallocate(y)

  
end program algeGrid2
